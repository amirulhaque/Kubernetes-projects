pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        KUBECONFIG_CREDENTIALS = credentials('kubeconfig')
        DOCKER_USER = "${DOCKERHUB_CREDENTIALS_USR}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/amirulhaque/Kubernetes-projects.git'
            }
        }

        stage('Build & Push Backend') {
            steps {
                dir('multi-tier-app-k8s/backend') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                            def backendImage = docker.build("${DOCKER_USER}/backend:latest")
                            backendImage.push()
                        }
                    }
                }
            }
        }

        stage('Build & Push Frontend') {
            steps {
                dir('multi-tier-app-k8s/frontend') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                            def frontendImage = docker.build("${DOCKER_USER}/frontend:latest")
                            frontendImage.push()
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_FILE')]) {
                    withEnv(["KUBECONFIG=$KUBECONFIG_FILE"]) {
                  sh """
                    kubectl apply -f multi-tier-app-k8s/k8s-manifests/namespace.yaml
                    kubectl apply -f multi-tier-app-k8s/k8s-manifests/
                 """
            }
            }
        }
    }
}
